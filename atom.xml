<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Samuel Wong</title>
  
  <subtitle>kayano-yoshitsugu</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://oushikotoba.github.io/"/>
  <updated>2017-09-26T17:00:42.451Z</updated>
  <id>http://oushikotoba.github.io/</id>
  
  <author>
    <name>灵子</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>html2</title>
    <link href="http://oushikotoba.github.io/2017/09/25/html2/"/>
    <id>http://oushikotoba.github.io/2017/09/25/html2/</id>
    <published>2017-09-25T14:26:00.000Z</published>
    <updated>2017-09-26T17:00:42.451Z</updated>
    
    <content type="html"><![CDATA[<p>输入框灰字默认值的实现</p><h2 id=""><a href="#" class="headerlink" title=""></a><a id="more"></a></h2><p>平时经常遇到一些输入框里面有一行浅色的文字提示，比如“输入密码”，“发表您的观点之类”的。这些文字在点击输入框后就会自行消失，这里给出了这种效果在网页上的实现。</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><blockquote><p>html语言，提交程序jsp，javascript语言</p></blockquote><h2 id="表单简介"><a href="#表单简介" class="headerlink" title="表单简介"></a>表单简介</h2><p><img src="https://raw.githubusercontent.com/oushikotoba/Markdown_images/oushikotoba-res/9-26-1.png" alt="img"></p><p>这是一个信息提交界面，其中有三个文本输入框，分别用到了html中input元素和textarea元素。<br>构造这样的界面需要使用到网页的表单元素form，把网页中输入数据并提交给Web服务器上的程序(后台程序)处理。<br>表单元素form主要有三个属性:action,method,entype。下面展示了上图表单的文本输入组件的构造：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"edit.jsp"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"application/x-www-form-urlencoded"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">legend</span>&gt;</span>修改博客<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>标题：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"title"</span> <span class="attr">name</span>=<span class="string">"title"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>关键字：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"keywords"</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">///省略</div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"content"</span>&gt;</span></div><div class="line">内容：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"content"</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">style</span>=<span class="string">"overflow:scroll"</span> <span class="attr">rows</span>=<span class="string">"12"</span> <span class="attr">cols</span>=<span class="string">"60"</span> &gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure></p><h2 id="功能实现"><a href="#功能实现" class="headerlink" title="功能实现"></a>功能实现</h2><p>到此我们只是构造好了几个能输入文本的框框，里面还是空空如也。我们要做的就是把默认值加进去。<br>这里默认值的添加input元素和textarea有所不同，具体如下：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"title"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"输入博客标题"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p><p>input无结束标签，所以通过属性值里的value来初始化</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">style</span>=<span class="string">"overflow:scroll"</span> <span class="attr">rows</span>=<span class="string">"12"</span> <span class="attr">cols</span>=<span class="string">"60"</span> &gt;</span>在这里输入博客内容<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></div></pre></td></tr></table></figure><p>textarea是在前后框起来的，所以默认值在熟悉的位置</p><p>做到这里，就需要用到javascript实现点击功能：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">   function inputClick(target)&#123;</span></div><div class="line"><span class="undefined">     var value="";</span></div><div class="line"><span class="undefined">     if(target.id=="title")</span></div><div class="line"><span class="undefined">        value="输入博客标题";</span></div><div class="line"><span class="undefined">     if(target.id=="keywords")</span></div><div class="line"><span class="undefined">        value="输入关键字";</span></div><div class="line"><span class="undefined">     if(target.id=="content")</span></div><div class="line"><span class="undefined">        value="在这里输入博客内容";</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">     if(target.value=='')&#123;</span></div><div class="line"><span class="undefined">       target.style.color="#B0B0B0";</span></div><div class="line"><span class="undefined">       target.value=value;</span></div><div class="line"><span class="undefined">     &#125;</span></div><div class="line"><span class="undefined">     else </span></div><div class="line"><span class="undefined">     if(target.value==value)&#123;</span></div><div class="line"><span class="undefined">        target.style.color="#000000";</span></div><div class="line"><span class="undefined">        target.value="";</span></div><div class="line"><span class="undefined">     &#125;</span></div><div class="line"><span class="undefined">   &#125;;</span></div><div class="line"><span class="undefined">   var f1=function()&#123;inputClick(this);&#125;;</span></div><div class="line"><span class="undefined">   document.getElementById("title").onclick= f1;</span></div><div class="line"><span class="undefined">   document.getElementById("keywords").onclick= f1;</span></div><div class="line"><span class="undefined">   document.getElementById("content").onclick= f1;</span></div><div class="line"><span class="undefined">   document.getElementById("title").onblur= f1;</span></div><div class="line"><span class="undefined">   document.getElementById("keywords").onblur= f1;</span></div><div class="line"><span class="undefined">   document.getElementById("content").onblur= f1;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><p>通过代码已经给出的javascript部分，我了解到实现方法是：</p><blockquote><ul><li>通过target找到id值，根据id值判断是否点击到输入框</li><li>点击输入框时函数内部value值被赋值为默认文本，通过判断函数内部value值和target处value值是否相等来实现对控制显示文字的value值进行控制的。</li><li>控制显示文字调用onclick()和onblur()函数，从字面意思也可以看出分别对应target被点击和未被点击的情况，也就是将value转换函数inputClick(target)的值传给当前的onclick()或onblur()，达到改变输入框默认内容的效果。</li></ul></blockquote><p>对于input来说只需要在input的属性设定中加入对这个input的id的定义，以及对默认值value的定义就可以了。<br>但是对于文本框textarea来说，由于其默认显示值需要在……&gt;default&lt; /textarea&gt;处定义，除了定义value,这个位置也不能漏。</p><p>另外，查了一下资料，发现对于textarea灰色字体的实现可以直接用onclick()以及onblur()函数在标签中实现，，所以把原value值“在这里输入博客”改成空就好，onblur的写法则相反，这样就可以实现textarea处的默认灰字文本。即：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"content"</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">style</span>=<span class="string">"overflow:scroll"</span> <span class="attr">rows</span>=<span class="string">"12"</span> <span class="attr">cols</span>=<span class="string">"60"</span> </span></div><div class="line"><span class="tag"><span class="attr">onclick</span>=<span class="string">"if(value=='在这里输入博客内容'&#125;&#123;value=''&#125;"</span><span class="attr">onblur</span>=<span class="string">"if(value=='')&#123;value='在这里输入博客内容'&#125;"</span> &gt;</span>在这里输入博客内容<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></div></pre></td></tr></table></figure></p><p>以上就是文本框灰字默认值的实现方法了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;输入框灰字默认值的实现&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
      <category term="html" scheme="http://oushikotoba.github.io/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>html语法入门</title>
    <link href="http://oushikotoba.github.io/2017/09/25/html1/"/>
    <id>http://oushikotoba.github.io/2017/09/25/html1/</id>
    <published>2017-09-25T14:25:47.000Z</published>
    <updated>2017-09-26T09:57:14.828Z</updated>
    
    <content type="html"><![CDATA[<p>(1)掌握基本HTML基本元素的使用方法</p><h2 id=""><a href="#" class="headerlink" title=""></a><a id="more"></a></h2><h2 id="网页元素"><a href="#网页元素" class="headerlink" title="网页元素"></a>网页元素</h2><p>一个html网页是由很多元素(element)组成的，每个元素由开始标签<br>(start tag)、内容和结束标签(end tag)三部分组成。 在开始标签中还可<br>以设置若干个元素属性。<br>（html大多数语法形式如下）<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>   <span class="attr">lang</span> = <span class="string">"zh-cn"</span>&gt;</span>     ……      <span class="tag">&lt;/<span class="name">html</span>&gt;</span> </div><div class="line">标签名   属性名    属性值      内容      结束标签</div></pre></td></tr></table></figure></p><p>html元素为html网页的根元素。在网页中加上开始标签和结束标签的动<br>作也称为打开标签和关闭标签。因为某些属性没有值，所以有值属性的等<br>号两端不能有空格</p><h2 id="元素分类"><a href="#元素分类" class="headerlink" title="元素分类"></a>元素分类</h2><p>① 布局元素： h1~h6、 p、 div、 header、 section、 article、 footer nav aside<br>② 文字元素： em、 span、 i、 s、 b<br>a(href、 target、 虚拟主机、虚拟目录、绝对路径、相对路径)<br>③ 图像元素： img<br>④ 列表元素: ul、 li<br>⑤ 表格元素： table、 tr、 td<br>⑥ 表单元素： form、 input、 textarea、 select<br>⑦ 框架： frameset、 iframe<br>⑧ 其它元素： pre、 br、 hr、 html5的其它元素<br>各个元素的基本语法可以参考<a href="http://www.w3school.com.cn/h.asp" target="_blank" rel="external">HTML/CSS教程</a><br>这里我作为例子的html网页用到的是简单而且比较常用的元素。</p><p>先来看放在开头的（一般自动生成）的<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE  html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-cn"</span>&gt;</span></div></pre></td></tr></table></figure></p><p>第一句话声明了html协议的版本，默认html5，没有这句话，浏览器就会随便帮你选一套协议，这就有可能导致网页格式乱套了。<br>第二句话中zh-cn是简体中文，你可以改成en，则成为网页属性就是英文页面了。具体语言编码参照……</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">   <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">title</span>&gt;</span>科研人员制造噪音来研究安静的价值<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined"> a:link,a:visited &#123;color:blue;text-decoration:none&#125;</span></div><div class="line"><span class="undefined"> body,inputC &#123;font-size:24px&#125;</span></div><div class="line"><span class="undefined"> input&#123;margin-top:20px&#125;</span></div><div class="line"><span class="undefined"> p &#123;text-indent:2em&#125;</span></div><div class="line"><span class="undefined"> #main,#footer,#header&#123;clear:both;max-width:40em;margin:80px auto&#125;</span></div><div class="line"><span class="undefined"> #header &#123;margin:0px auto&#125;</span></div><div class="line"><span class="undefined"> ul li &#123;float:left;list-style-type:none;width:4em;&#125;</span></div><div class="line"><span class="undefined"> #fig1 &#123;float:right;&#125;</span></div><div class="line"><span class="undefined"> table &#123;width:100%;border-collapse:collapse&#125;</span></div><div class="line"><span class="undefined"> td &#123;text-align:center&#125;</span></div><div class="line"><span class="undefined"> #cominput &#123;width:100%;height:400px&#125;</span></div><div class="line"><span class="undefined"> #comtitle &#123;margin-top:40px&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">   <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"header"</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://172.18.187.11:8080/lab/html1/sysu.png"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">       </div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://172.18.187.11:8080/lab/html1/kj.html"</span>&gt;</span>科技<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://172.18.187.11:8080/lab/html1/ny.html"</span>&gt;</span>农业<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://172.18.187.11:8080/lab/html1/jk.html"</span>&gt;</span>健康<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://172.18.187.11:8080/lab/html1/jy.html"</span>&gt;</span>教育<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://172.18.187.11:8080/lab/html1/jj.html"</span>&gt;</span>经济<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://172.18.187.11:8080/lab/html1/sh.html"</span>&gt;</span>社会<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;(1)掌握基本HTML基本元素的使用方法&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
      <category term="html" scheme="http://oushikotoba.github.io/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>一个Deadlock的实现</title>
    <link href="http://oushikotoba.github.io/2017/09/24/embled-system/"/>
    <id>http://oushikotoba.github.io/2017/09/24/embled-system/</id>
    <published>2017-09-24T07:53:49.000Z</published>
    <updated>2017-09-26T09:56:40.732Z</updated>
    
    <content type="html"><![CDATA[<p>嵌入式系统实验</p><h2 id=""><a href="#" class="headerlink" title=""></a><a id="more"></a></h2><h2 id="一-开发环境配置"><a href="#一-开发环境配置" class="headerlink" title="一.开发环境配置"></a>一.开发环境配置</h2><ul><li>工具：Ubuntu16.04，VMWare Work Station；</li><li>语言：Javac<br>###1.Ubuntu虚拟机安装<br>打开VMWare Workstation，-&gt;创建新的虚拟机-&gt;典型，将Ubuntn镜像文件加载进来，打开虚拟机，等待Ubuntu自动安装完成<br>###2.Java库安装<br>安装好Ubuntu后，首先确认网络是否连接，若未连接成功，则在设定图表中点击Network，将Network proxy中的none一项改为Automatic，然后系统会提示输入你的登陆密码。完成后可以正常连网。</li></ul><p>打开terminal窗口，输入以下代码：</p><blockquote><p>sudo apt install default-jdk</p></blockquote><p>输入javac，看到下图：<br><img src="https://raw.githubusercontent.com/oushikotoba/Markdown_images/oushikotoba-res/9-24-2.png" alt="img"><br>安装成功</p><h2 id="二-死锁代码实现"><a href="#二-死锁代码实现" class="headerlink" title="二.死锁代码实现"></a>二.死锁代码实现</h2><p>首先，这里提一下synchronized语句的作用<br>synchronized可以作用于方法、代码块和类。这里选择的是作用于整个方法的语句。</p><p>Synchronized作用于整个方法的写法有两种：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public synchronized void method()</div><div class="line">&#123;</div><div class="line">   // todo</div><div class="line">&#125;</div><div class="line">//or</div><div class="line">public void method()</div><div class="line">&#123;</div><div class="line">   synchronized(this) &#123;</div><div class="line">      // todo</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>也就是说修饰方法内整个代码块的写法与直接修饰一个方法的写法是等价的。<br>我们知道线程是CPU调度的最小单位。代码中我们以thread的形式定义。如果我们定义的一个线程开始访问一个对象中的synchronized(this)同步代码块时，其他试图访问该对象的线程将被阻塞，因为在执行synchronized代码块时会锁定当前的对象，只有执行完该代码块才能释放该对象锁。但是这个时候其它线程仍然可以访问该对象中的非synchronized(this)同步代码块。 </p><p>建立一个死锁的java代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</div><div class="line">    <span class="function"><span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">methodA</span><span class="params">(B,b)</span></span>&#123;</div><div class="line">b.last();</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">last</span><span class="params">()</span></span>&#123;<span class="comment">//SYNCHRONIZED METHOD</span></div><div class="line">        System.out.println(<span class="string">"Inside A.last()"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</div><div class="line">    <span class="function"><span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">methodB</span><span class="params">(A,a)</span></span>&#123;</div><div class="line">        a.last();</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">last</span><span class="params">()</span></span>&#123;</div><div class="line">        System.out.println(<span class="string">"Inside B.last()"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Deadlock</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</div><div class="line">    A a=<span class="keyword">new</span> A();B b=<span class="keyword">new</span> B();</div><div class="line"></div><div class="line">    Deadlock()&#123;</div><div class="line">        Thread t = <span class="keyword">new</span> Thread(<span class="keyword">this</span>);</div><div class="line"><span class="keyword">int</span> count = <span class="number">20000</span>;</div><div class="line"></div><div class="line">t.start();</div><div class="line"><span class="keyword">while</span>(count--&gt;<span class="number">0</span>);</div><div class="line">System.out.println(<span class="string">"A "</span>+System.nanoTime() );</div><div class="line">a.methodA(b);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</div><div class="line">System.out.println(<span class="string">"B "</span>+System.nanoTime() );     </div><div class="line">        b.methodB(a);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</div><div class="line">    <span class="keyword">new</span> Deadlock();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>将上面的代码保存至Deadlock.java<br>在terminal窗口下输入</p><blockquote><p>java Deadlock.java</p></blockquote><p>然后可以看到class文件被生成在同一目录下<br><img src="https://raw.githubusercontent.com/oushikotoba/Markdown_images/oushikotoba-res/9-24-1.png" alt="img"></p><h2 id="三-结果分析"><a href="#三-结果分析" class="headerlink" title="三.结果分析"></a>三.结果分析</h2><p>运行程序需要写一个bat文件<br>用下面的代码创建一个Deadlock.bat，放在同一目录下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#!bin/bash</div><div class="line">for(( c=1;c&lt;=10000;c++))</div><div class="line">do</div><div class="line">    echo &quot;$c times&quot;</div><div class="line">    java Deadlock</div><div class="line">done</div></pre></td></tr></table></figure></p><p>其中c是执行次数，这里调高一点<br>在terminal窗口下执行：</p><blockquote><p>chmod +x Deadlock.bat<br> ./Deadlock.bat</p></blockquote><p>就可以看到bat文件执行结果<br><img src="https://raw.githubusercontent.com/oushikotoba/Markdown_images/oushikotoba-res/9-24-3.png" alt="img"><br>程序在第886次运行停止不动，产生了死锁。<br>要弄明白死锁是怎么发生的，首先我们要了解死锁产生的四个必要条件：</p><ul><li>互斥条件：一个资源每次只能被一个进程使用</li><li>请求与保持条件：一个进程因请求资源而阻塞时，对已获得的资源保持不 放</li><li>不剥夺条件:进程已获得的资源，在末使用完之前，不能强行剥夺</li><li>循环等待条件:若干进程之间形成一种头尾相接的循环等待资源关系</li></ul><p>知道多少次开始死锁并没有用，这个次数因电脑不同也会不一样，可能一台性能比较好的电脑跑上几万次也没出现死锁。关键还是要找到A和B是如何相互调用的。</p><p>观察A与B的延时，它们非常接近，所以A与B同时发出请求，互相申请对方的资源，于是死锁等待就发生了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;嵌入式系统实验&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
      <category term="嵌入式" scheme="http://oushikotoba.github.io/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
</feed>
